/*! Angular-PDF Version: 1.5.0 | Released under an MIT license */
!function(){"use strict";angular.module("pdf",[]).directive("ngPdf",["$window",function($window){var renderTask=[],pdfLoaderTask=null,debug=!1,backingScale=function(canvas){var ctx=canvas.getContext("2d"),dpr=window.devicePixelRatio||1,bsr=ctx.webkitBackingStorePixelRatio||ctx.mozBackingStorePixelRatio||ctx.msBackingStorePixelRatio||ctx.oBackingStorePixelRatio||ctx.backingStorePixelRatio||1;return dpr/bsr},setCanvasDimensions=function(canvas,w,h){var ratio=backingScale(canvas);return canvas.width=Math.floor(w*ratio),canvas.height=Math.floor(h*ratio),canvas.style.width=Math.floor(w)+"px",canvas.style.height=Math.floor(h)+"px",canvas.getContext("2d").setTransform(ratio,0,0,ratio,0,0),canvas};return{restrict:"E",templateUrl:function(element,attr){return attr.templateUrl?attr.templateUrl:"partials/viewer.html"},link:function(scope,element,attrs){function clearContainer(){if(container)for(;container.firstChild;)container.removeChild(container.firstChild)}function renderPDF(){clearContainer();var params={url:url,withCredentials:creds};httpHeaders&&(params.httpHeaders=httpHeaders),url&&url.length&&(pdfLoaderTask=PDFJS.getDocument(params),pdfLoaderTask.onProgress=scope.onProgress,pdfLoaderTask.onPassword=scope.onPassword,pdfLoaderTask.then(function(_pdfDoc){"function"==typeof scope.onLoad&&scope.onLoad(),pdfDoc=_pdfDoc,scope.renderDocument(),scope.$apply(function(){scope.pageCount=_pdfDoc.numPages})},function(error){error&&"function"==typeof scope.onError&&scope.onError(error)}))}element.css("display","block");var url=scope.pdfUrl,httpHeaders=scope.httpHeaders,pdfDoc=null,pageToDisplay=isFinite(attrs.page)?parseInt(attrs.page):1,pageFit="page-fit"===attrs.scale,scale=attrs.scale>0?attrs.scale:1,containerId=attrs.containerid||"pdf-container",container=document.getElementById(containerId);debug=!!attrs.hasOwnProperty("debug")&&attrs.debug;var creds=attrs.usecredentials,windowEl=angular.element($window);windowEl.on("scroll",function(){scope.$apply(function(){scope.scroll=windowEl[0].scrollY})}),PDFJS.disableWorker=!0,scope.pageNum=pageToDisplay,scope.renderDocument=function(){for(var i=1;i<=pdfDoc.numPages;i+=1){var canvas=document.createElement("canvas");if(container.appendChild(canvas),i<pdfDoc.numPages){var separation=document.createElement("hr");container.appendChild(separation)}scope.renderPage(i,canvas)}},scope.renderPage=function(num,canvas){renderTask[num]&&renderTask[num]._internalRenderTask.cancel(),pdfDoc.getPage(num).then(function(page){var viewport,pageWidthScale,renderContext;if(pageFit){viewport=page.getViewport(1);var clientRect=element[0].getBoundingClientRect();pageWidthScale=clientRect.width/viewport.width,scale=pageWidthScale}viewport=page.getViewport(scale);var ctx=canvas.getContext("2d",{alpha:!1});setCanvasDimensions(canvas,viewport.width,viewport.height),renderContext={canvasContext:ctx,viewport:viewport},renderTask[num]=page.render(renderContext),renderTask[num].promise.then(function(){"function"==typeof scope.onPageRender&&scope.onPageRender()}).catch(function(reason){console.log(reason)})})},scope.zoomIn=function(){return pageFit=!1,scale=parseFloat(scale)+.2,scope.renderDocument(),scale},scope.zoomOut=function(){return pageFit=!1,scale=parseFloat(scale)-.2,scope.renderDocument(),scale},scope.fit=function(){pageFit=!0,scope.renderDocument()},scope.$watch("pdfUrl",function(newVal){""!==newVal&&(debug&&console.log("pdfUrl value change detected: ",scope.pdfUrl),url=newVal,pdfLoaderTask?pdfLoaderTask.destroy().then(function(){renderPDF()}):renderPDF())})}}}])}();